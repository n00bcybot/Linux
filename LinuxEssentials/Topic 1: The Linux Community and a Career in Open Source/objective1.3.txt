Criteria of Free Software

	To understand the concept, you should think of “free” as in “free speech,” not as in “free beer”

	the four essential freedoms:
		Freedom 0: The freedom to run the program as you wish, for any purpose
		Freedom 1: The freedom to study how the program works, and change it so it does your computing as you wish. Access to the source code is a precondition for this
		Freedom 2: The freedom to redistribute copies so you can help others
		Freedom 3: The freedom to distribute copies of your modified versions to others. By doing this you can give the whole community a chance to benefit from your changes. Access to the source
		code is a precondition for this

Open Source Software vs. Free Software

	not the same thing
	Free software is about software freedom (ethical and philosophical stance).
	Open source is about practicality (efficiency, collaboration, and business adoption). 

Licenses

Copyleft
	
	GNU General Public License (GPL) - one of the most important, (Linux kernel)
	GNU Lesser General Public License (LGPL) - governs the combination of free software with modifications made to code where the source code for the modifications do not have to be released to the public
	GNU Affero General Public License (AGPL) - covers selling access to hosted software
	GNU Free Documentation License (FDL) - extends freedom principles to software documentation

Open Source Definition and Permissive Licenses

	On the open source side, it is the Open Source Initiative (OSI), founded in 1998 by Eric S. Raymond and Bruce Perens, which is mainly concerned with licensing issues.
	NetBSD, FreeBSD and OpenBSD -  licenses underlying these projects are often referred to as permissive

Creative Commons

	Creative Commons is a global nonprofit organization that enables sharing and reuse of creativity and knowledge through the provision of free legal tools

	CC BY (“Attribution”) 
		The free license that allows anyone to edit and distribute the work as long as they name the author.
	CC BY-SA (“Attribution-ShareAlike”)
		As CC BY, except that the modified work may only be distributed under the same license. The principle reminds of the copyleft, because the license is “inherited” here as well.
	CC BY-ND (“Attribution-NoDerivatives”)
		Like CC BY, except that the work may only be passed on unmodified.
	CC BY-NC (“Attribution-NonCommercial”)
		The work may be edited and distributed by naming the author, but only under non-commercial conditions.
	CC BY-NC-SA (“Attribution-NonCommercial-ShareAlike”)
		As BY-NC, except that the work may only be shared under the same conditions (i.e. a copyleft-like license).
	CC BY-NC-ND (“Attribution-NonCommercial-NoDerivatives”)
		The most restrictive license: the distribution is allowed with attribution of the author, but only unchanged and under non-commercial conditions.

Business Models in Open Source

	dual licensing - free software is offered in parallel under a more restrictive or even proprietary license, which in turn guarantees the customer more extensive services (response times in the event of errors, 
	updates, versions for certain platforms, etc.)
	Software as a Service (SaaS) - the customer pays for the use of the software according to various parameters, for example the number of users


Explorational Exercises

	1. Under which license (including version) are the following applications available? 
		Apache HTTP Server - Apache License 2.0
		MySQL Community Server - GNU General Public License (GPL) v2
		Wikipedia articles - Creative Commons Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
		Mozilla Firefox - Mozilla Public License (MPL) 2.0
		GIMP - GNU General Public License (GPL) v3

	2. You want to release your software under the GNU GPL v3. What steps should you follow?
		◦ If necessary, secure yourself against the employer with a copyright waiver, for example, so that you can specify the license.
		◦ Add a copyright notice to each file.
		◦ Add a file called COPYING with the full license text to your software.
		◦ Add a reference to the license in each file.

	3. You have written proprietary software and would like to combine it with free software under the GPL version 3. Are you allowed to do this or what do you have to consider?
		Provided that your proprietary software and the free software remain separate from each other, the combination is possible. However, you have to make sure that this separation is technically guaranteed and
		recognizable for the users. If you integrate the free software in such a way that it becomes part of your product, you must also publish the product under the GPL according to the copyleft principle.

	4. Why did the Free Software Foundation release the GNU Affero General Public License (GNU AGPL) as a supplement to the GNU GPL?
		The GNU AGPL closes a license gap that arises especially with free software hosted on a server: If a developer makes changes to the software, he is not obliged under the GPL to make these
		changes accessible, since he allows access to the program, but does not “redistribute” on the program in the GPL sense. The GNU AGPL, on the other hand, stipulates that the software must be 
		made available for  download with all changes.

	5. Name three examples of free software, which are also offered as “Business Edition”, i.e. in a chargeable version.
		MySQL, Zammad, Nextcloud
